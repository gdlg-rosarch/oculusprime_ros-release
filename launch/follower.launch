<launch>
  
  <!-- Launch the OpenNI drivers -->

	<arg name="camera"      default="camera"/>
	<arg name="publish_tf"  default="false"/>
	<arg name="skipframes"      default="5"/>
	<arg name="depth_registration"  default="false"/>
	<arg name="use_device_time" default="false"/>
	<arg     if="$(arg depth_registration)" name="depth" value="depth_registered" />
	<arg unless="$(arg depth_registration)" name="depth" value="depth" />
	<param name="/camera/driver/data_skip" value="$(arg skipframes)" />
	<param name="/camera/driver/use_device_time" value="$(arg use_device_time)" />

	<include file="$(find oculusprime)/launch/openni2.launch" >
		<arg name="publish_tf" value="$(arg publish_tf)"/>
		    <arg name="rgb_processing" value="false" />
			<arg name="depth_registration" value="false" /> 
			<arg name="depth_processing" value="true" />
			
	</include>
	
  <!--  Real robot: Load turtlebot follower into the 3d sensors nodelet manager to avoid pointcloud serializing -->
  <!--  Simulation: Load turtlebot follower into nodelet manager for compatibility -->
  
  
  <node pkg="nodelet" type="nodelet" name="oculusprime_follower"
        args="load oculusprime/OculusprimeFollower camera/camera_nodelet_manager">
 	
    <param name="enabled" value="true" />  <!-- enable/disable following -->
    <param name="x_scale" value="2.5" />   <!-- turn amplitude facor -->
    <param name="z_scale" value="2.0" />   <!-- ignored -->
    <param name="min_x" value="-0.35" />  <!-- scan box size in meters, horiz from ctr -->
    <param name="max_x" value="0.35" />   <!-- scan box size in meters, horiz from ctr -->
    <param name="min_y" value="0.1" /> <!-- scan box size in meters, distance up from floor -->
    <param name="max_y" value="0.5" /> <!-- scan box size in meters, distance up from floor -->
    <param name="max_z" value="1.3" /> <!-- scan box size in meters, horiz depth from camera -->
    <param name="goal_z" value="0.7" /> <!-- distance to hold target centroid, distance from camera -->
    <param name="z_tol" value="0.1" />  <!-- +/- tolerance distance to hold target centroid, distance from camera -->
    <param name="x_tol" value="0.15" /> <!-- +/- tolerance distance to hold target centroid, lateral -->
  </node>
  	
	<node pkg="oculusprime" type="cmd_vel_listener.py" name="cmd_vel_listener" output="screen"
	required="true" /> 
	
</launch>

